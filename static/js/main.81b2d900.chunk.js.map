{"version":3,"sources":["containers/InputSearch.js","components/Header.js","containers/SearchPanel.js","components/Time.js","components/PostListItem.js","components/PostList.js","api.js","containers/App.js","index.js"],"names":["InputSearch","onChange","value","className","name","type","Header","AppContext","Consumer","alt","src","SearchPanel","showMenuHandler","dropDownHandler","updateTagFilter","updateSortFilter","updateNumFilter","showCalender","menu1","menu2","menu3","searchDropDownValue","byDropDownValue","forDropDownValue","customDateRange","fromDate","toDate","showCalenderHandler","nbHits","processingTimeMS","page","onClick","ref","element","event","Time","time","timeString","moment","fromNow","PostListItem","post","index","title","url","href","points","author","created_at","num_comments","story_title","dangerouslySetInnerHTML","storyComment","comment_text","__html","titleCheck","PostList","posts_data","map","key","objectID","handleErrors","response","ok","Error","statusText","fetchData","query","tagFilter","sortFilter","numericFilter","fetch","then","json","catch","error","console","log","React","createContext","App","state","data","nbPages","active","setState","target","hits","pageCountHandler","object","tag","sort","filter","filterMap","updatedTimestamp","Math","floor","Date","now","dropDownElement","menu","document","addEventListener","closeMenu","contains","removeEventListener","closeCalender","fromDateTimeStamp","format","toDateTimeStamp","this","Provider","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","pageLinkClassName","activeClassName","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.81b2d900.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* MAKING the API Call to Rest API From Input Box */\nconst InputSearch = ({ onChange, value }) => {\n    return (\n        <div className=\"input-search-box\">\n          <input name=\"query\" onChange={onChange} type=\"text\" value={value}/>\n        </div>\n    );\n};\n\nInputSearch.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n};\n\nexport default InputSearch;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport InputSearch from '../containers/InputSearch';\nimport { AppContext } from '../containers/App.js';\n\n/* STATELESS HEADER TO SHOWCASE HEADER ITEMS. */\nconst Header = () => (\n    <AppContext.Consumer>\n      {({\n          onChange,\n          value\n      }) => (\n           <div className=\"header\">\n             <div className=\"logo-wrapper\">\n               <img alt=\"\" src=\"https://hn.algolia.com/assets/logo-hn-search.png\"/>\n               <span className=\"logo-name\">\n                 Search\n                 <br/>\n                 Hacker News\n               </span>\n             </div>\n             <InputSearch onChange={onChange} value={value}/>\n           </div>\n      )}\n    </AppContext.Consumer>\n);\n\nHeader.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppContext } from '../containers/App.js';\n\n/* MAKING API CALLS BASED ON THE SEARCH PANEL ITEM CLICK */\nconst SearchPanel = () => (\n    <AppContext.Consumer>\n      {({\n          showMenuHandler,\n          dropDownHandler,\n          updateTagFilter,\n          updateSortFilter,\n          updateNumFilter,\n          showCalender,\n          menu1,\n          menu2,\n          menu3,\n          searchDropDownValue,\n          byDropDownValue,\n          forDropDownValue,\n          customDateRange,\n          fromDate,\n          toDate,\n          onChange,\n          showCalenderHandler,\n          nbHits,\n          processingTimeMS,\n          page\n      }) => (\n        <div className=\"search-panel\">\n          <div>\n            <span>Search</span>\n            <button className=\"mainButton\"\n                    onClick={() => showMenuHandler(\"menu1\")}>\n              {searchDropDownValue}\n            </button>\n            {\n                menu1\n                    ? (\n                        <div className=\"menu\"\n                             ref={(element) => {\n                                 dropDownHandler(element);\n                        }}>\n                          <button className=\"dropDownBtn\"\n                                  name=\"searchDropDownValue\"\n                                  value=\"All\"\n                                  onClick={(event) =>\n                                           updateTagFilter(event, \"(story,comment,poll)\")}>\n                            All\n                          </button>\n                          <button className=\"dropDownBtn\"\n                                  name=\"searchDropDownValue\"\n                                  value=\"Stories\"\n                                  onClick={(event) =>\n                                           updateTagFilter(event, \"story\")}>\n                            Stories\n                          </button>\n                          <button className=\"dropDownBtn\"\n                                  name=\"searchDropDownValue\"\n                                  value=\"Comments\" onClick={(event) =>\n                                                            updateTagFilter(event, \"comment\")}>\n                            Comments\n                          </button>\n                        </div>          \n                    )\n                    : (\n                        null\n                    )\n            }\n          </div>\n          <div>\n            <span>by</span>\n            <button\n              className=\"mainButton\"\n              onClick={() =>\n                       showMenuHandler(\"menu2\")}>\n              {byDropDownValue}\n            </button>\n            {\n                menu2\n                    ? (\n                        <div className=\"menu\"\n                             ref={(element) => {\n                                 dropDownHandler(element);\n                        }}>\n                          <button\n                            className=\"dropDownBtn\"\n                            name=\"byDropDownValue\"\n                            value=\"Popularity\"\n                            onClick={(event) => updateSortFilter(event, \"popularity\")}>\n                            Popularity\n                          </button>\n                          <button\n                            className=\"dropDownBtn\"\n                            name=\"byDropDownValue\"\n                            value=\"Date\"\n                            onClick={(event) =>\n                                     updateSortFilter(event, \"date\")}>\n                            Date\n                          </button>\n                        </div>          \n                    )\n                    : (\n                        null\n                    )\n            }\n          </div>\n          <div>\n            <span>for</span>\n            <button\n              className=\"mainButton\"\n              onClick={() => showMenuHandler(\"menu3\")}>\n              {forDropDownValue}\n            </button>\n            {\n                menu3 \n                    ? (\n                        <div className=\"menu\"\n                             ref={(element) => {\n                                 dropDownHandler(element);\n                             }}>\n                          <button\n                            className=\"dropDownBtn\"\n                            name=\"forDropDownValue\"\n                            value=\"All-time\"\n                            onClick={(event) => updateNumFilter(event, \"all-time\")}>\n                            All-Time\n                          </button>\n                          <button\n                            className=\"dropDownBtn\"\n                            name=\"forDropDownValue\"\n                            value=\"Last 24h\"\n                            onClick={(event) => updateNumFilter(event, \"last-24-hours\")}>\n                            Last 24h\n                          </button>\n                          <button\n                            className=\"dropDownBtn\"\n                            name=\"forDropDownValue\"\n                            value=\"Past Week\"\n                            onClick={(event) => updateNumFilter(event, \"past-week\")}>\n                            Past Week\n                          </button>\n                          <button\n                            className=\"dropDownBtn\"\n                            name=\"forDropDownValue\"\n                            value=\"Past Month\"\n                            onClick={(event) => updateNumFilter(event, \"past-month\")}>\n                            Past Month\n                          </button>\n                          <button\n                            className=\"dropDownBtn\"\n                            name=\"forDropDownValue\"\n                            value=\"Past Year\"\n                            onClick={(event) => updateNumFilter(event, \"past-year\")}>\n                            Past Year\n                          </button>\n                          \n                          <button\n                            className=\"dropDownBtn\"\n                            name=\"forDropDownValue\"\n                            value=\"Custom Range\"\n                            onClick={(event) => showCalenderHandler(event)}>\n                            Custom Range\n                          </button>\n                        </div>          \n                    )\n                    : (\n                        null\n                    )\n            }\n            {\n                showCalender\n                    ?(\n                        <div className=\"custom-form\">\n                          <input name=\"fromDate\"\n                                 type=\"text\"\n                                 value={fromDate}\n                                 onChange={onChange}\n                          />\n                          <input name=\"toDate\"\n                                 type=\"text\"\n                                 value={toDate}\n                                 onChange={onChange}\n                          />\n                          <button onClick={() =>\n                                           customDateRange()}>\n                            Submit\n                          </button>\n                        </div>\n                    )\n                    : (\n                        null\n                    )\n            }\n          </div>\n          <div className=\"search-panel-result\">\n            {\n                page !== 0\n                    ?\n                    <span>\n                      Page&nbsp;\n                      {page} of &nbsp;\n                      {nbHits}&nbsp;results\n                      ({processingTimeMS/1000}&nbsp;seconds)\n                    </span>\n                :\n                    <span>\n                      {nbHits}&nbsp;results\n                      ({processingTimeMS/1000}&nbsp;seconds)\n                    </span>\n            }\n          </div>\n        </div>  \n      )}\n    </AppContext.Consumer>\n);\n\nSearchPanel.propTypes = {\n    showMenuHandler: PropTypes.func.isRequired,\n    dropMenuHandler: PropTypes.func,\n    updateTagFilter: PropTypes.func.isRequired,\n    updateSortFilter: PropTypes.func.isRequired,\n    showCalender: PropTypes.bool.isRequired,\n    menu1: PropTypes.bool.isRequired,\n    menu2: PropTypes.bool.isRequired,\n    menu3: PropTypes.bool.isRequired,\n    searchDropDownValue: PropTypes.string.isRequired,\n    byDropDownValue: PropTypes.string.isRequired,\n    forDropDownValue: PropTypes.string.isRequired,\n    customDateRange: PropTypes.func.isRequired,\n    fromDate: PropTypes.string.isRequired,\n    toDate: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    showCalenderHandler: PropTypes.func.isRequired\n};\n\nexport default SearchPanel;\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nconst Time = ({ time }) => {\n    const timeString = moment(time).fromNow();\n    return(\n        <span className=\"time\">\n          {timeString}\n        </span>\n    );\n};\n\nTime.propTypes = {\n    time: PropTypes.string.isRequired\n};\n\nexport default Time;\n","import React from 'react';\nimport Time from '../components/Time';\nimport PropTypes from 'prop-types';\n\n/* STATELESS POST-LIST-ITEM PAGE USING THE PROPS PASSED */\nconst createMarkup = (storyComment) => {\n    return (\n        {__html: storyComment}\n    );\n};\n\nconst titleCheck = (title, url, post) => {\n    if (title && url) {\n        return (\n            <div className=\"post-list-item\">\n              <div className=\"post-title-panel\">\n                <a className=\"post-title\" href={post.url}>\n                  {post.title}\n                </a>\n              </div>\n              <div className=\"post-data-line\">\n                <span className=\"post-score\">\n                  {post.points}&nbsp;points\n                </span>\n                <span className=\"post-user\">\n                  {post.author}\n                </span>\n                <Time time={post.created_at}/>\n                <span className=\"post-comments\">\n                  {post.num_comments} &nbsp;comments\n                </span>\n                <span className=\"post-url\">\n                  <a href={post.url}>{post.url}</a>\n                </span>\n              </div>\n            </div>\n        );\n    }\n    else {\n        return(\n            <div className=\"post-list-item\">\n              <div className=\"post-title-panel\">\n                <a className=\"post-title\" href={post.url}>\n                  {post.story_title}\n                </a>\n              </div>\n              <div className=\"post-data-line\">\n                <span className=\"post-score\">\n                  {post.points}&nbsppoints\n                </span>\n                <span className=\"post-user\">\n                  {post.author}\n                </span>\n                <Time time={post.created_at}/>\n                <span className=\"post-number-comments\">\n                  {post.num_comments} &nbsp;comments\n                </span>\n              </div>\n              <div dangerouslySetInnerHTML={createMarkup(post.comment_text)}>\n              </div>\n            </div>\n        );\n    }\n};\n\nconst PostListItem = ({ post, index }) => {\n    return (\n        titleCheck(post.title, post.url, post)\n    );\n};\n\nPostListItem.propTypes = {\n    post: PropTypes.object.isRequired,\n    index: PropTypes.number.isRequired\n};\n\nexport default PostListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostListItem from '../components/PostListItem';\nimport { AppContext } from '../containers/App.js';\n\n/* STATELESS POSTLIST PAGE USING LIST PROP */\nconst PostList = () => (\n    <AppContext.Consumer>\n      {({\n          posts_data\n      }) => (\n          <div className=\"post-list\">\n            {posts_data.map((post, index)=> (\n                <PostListItem key={post.objectID} index={index} post={post}/>\n            ))}\n          </div>\n      )}\n    </AppContext.Consumer>\n);\n\nPostList.propTypes = {\n    posts_data: PropTypes.array.isRequired\n};\n\nexport default PostList;\n","const HN_BASE_URL = 'https://hn.algolia.com/api/v1/search?query=';\nconst HN_SORT_BY_DATE= 'https://hn.algolia.com/api/v1/search_by_date?query=';\n\nconst handleErrors = (response) => {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n};\n\nconst fetchData = (query, tagFilter, sortFilter, numericFilter, page) => {\n    return (\n        sortFilter === \"popularity\"\n            ? (\n                fetch(HN_BASE_URL +\n                      query +\n                      \"&tags=\" +\n                      tagFilter +\n                      \"&numericFilters=\" +\n                      numericFilter +\n                      \"&page=\" +\n                      page) \n                \n                    .then(handleErrors)\n                    .then(response => response.json())\n                    .catch(error => console.log(error))\n            )\n            : (\n                fetch(HN_SORT_BY_DATE +\n                      query +\n                      \"&tags=\" +\n                      tagFilter +\n                      \"&numericFilters=\" +\n                      numericFilter +\n                      \"&page=\" +\n                      page)\n                \n                    .then(handleErrors)\n                    .then(response => response.json())\n                    .catch(error => console.log(error))\n            )\n    );\n};\n\nexport default fetchData;\n\n      \n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport moment from 'moment';\nimport SearchPanel from  '../containers/SearchPanel';\nimport PostList from '../components/PostList';\nimport ReactPaginate from 'react-paginate';\nimport fetchData from '../api';\nimport '../containers/App.css';\n\nconst AppContext = React.createContext();\n\nclass App extends Component {\n    state = {\n        menu1: false,\n        menu2: false,\n        menu3: false,\n        showCalender: false,\n        query: \"\",\n        data: [],\n        searchDropDownValue: \"Stories\",\n        byDropDownValue: \"Popularity\",\n        forDropDownValue: \"All Time\",\n        tagFilter: \"(story,comment,poll)\",\n        sortFilter: \"popularity\",\n        numericFilter: \"created_at_i>1171843200\",\n        fromDate: \"\",\n        toDate: \"\",\n        nbHits: \"\",\n        processingTimeMS: \"\",\n        page: 0,\n        nbPages: 0,\n        active: 0\n    }\n\n    componentDidMount() {\n        fetchData(this.state.query,\n                  this.state.tagFilter,\n                  this.state.sortFilter,\n                  this.state.numericFilter,\n                  this.state.page\n                 ).then(value =>\n                        this.setState({\n                            data: value.hits,\n                            nbHits: value.nbHits,\n                            processingTimeMS: value.processingTimeMS,\n                            page: value.page,\n                            nbPages: value.nbPages\n                        }));\n    }\n\n    onChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        }, () => {\n            fetchData(this.state.query,\n                      this.state.tagFilter,\n                      this.state.sortFilter,\n                      this.state.numericFilter,\n                      this.state.page\n                     ).then(value =>\n                            this.setState({\n                                data: value.hits,\n                                nbHits: value.nbHits,\n                                processingTimeMS: value.processingTimeMS,\n                                page: value.page,\n                                nbPages: value.nbPages\n                            }));\n        });\n    };\n\n    pageCountHandler = (object) => {\n        this.setState({\n            page: object[\"selected\"],\n            active: object[\"selected\"]\n        }, () => {\n            fetchData(this.state.query,\n                      this.state.tagFilter,\n                      this.state.sortFilter,\n                      this.state.numericFilter,\n                      this.state.page\n                     ).then(value =>\n                            this.setState({\n                                data: value.hits,\n                                nbHits: value.nbHits,\n                                processingTimeMS: value.processingTimeMS,\n                                page: value.page,\n                                nbPages: value.nbPages,\n                            }));\n        });\n    }\n    \n    updateTagFilter = (event, tag) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            tagFilter: tag\n        }, () => {\n            fetchData(this.state.query,\n                      this.state.tagFilter,\n                      this.state.sortFilter,\n                      this.state.numericFilter,\n                      this.state.page\n                     ).then(value =>\n                            this.setState({\n                                data: value.hits,\n                                nbHits: value.nbHits,\n                                processingTimeMS: value.processingTimeMS,\n                                page: value.page,\n                                nbPages: value.nbPages\n                            }));\n        });\n    };\n        \n    updateSortFilter = (event, sort) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            sortFilter: sort\n        }, () => {\n            fetchData(this.state.query,\n                      this.state.tagFilter,\n                      this.state.sortFilter,\n                      this.state.numericFilter,\n                      this.state.page\n                     ).then(value =>\n                            this.setState({\n                                data: value.hits,\n                                nbHits: value.nbHits,\n                                processingTimeMS: value.processingTimeMS,\n                                page: value.page,\n                                nbPages: value.nbPages\n                            }));\n        });\n    };\n\n    updateNumFilter = (event, filter) => {\n        let filterMap = {\n            \"all-time\": 1171843200,\n            \"last-24-hours\": 1,\n            \"past-week\": 7,\n            \"past-month\": 30,\n            \"past-year\": 365\n        };\n        let timeStamp = Math.floor(Date.now() / 1000);\n        let updatedTimestamp = timeStamp - (filterMap[filter]\n                                            * 24 * 60 * 60);\n        if (filter !== \"all-time\") {\n            this.setState({\n                [event.target.name]: event.target.value,\n                numericFilter: \"created_at_i>\" + updatedTimestamp\n            }, () => {\n                fetchData(this.state.query,\n                          this.state.tagFilter,\n                          this.state.sortFilter,\n                          this.state.numericFilter,\n                          this.state.page\n                         ).then(value =>\n                                this.setState({\n                                    data: value.hits,\n                                    nbHits: value.nbHits,\n                                    processingTimeMS: value.processingTimeMS,\n                                    page: value.page,\n                                    nbPages: value.nbPages\n                                }));\n            });\n        }\n        else {\n            this.setState({\n                [event.target.name]: event.target.value,\n                numericFilter: \"created_at_i>\" + filterMap[filter]\n            }, () => {\n                fetchData(this.state.query,\n                          this.state.tagFilter,\n                          this.state.sortFilter,\n                          this.state.numericFilter,\n                          this.state.page\n                         ).then(value =>\n                                this.setState({\n                                    data: value.hits,\n                                    nbHits: value.nbHits,\n                                    processingTimeMS: value.processingTimeMS,\n                                    page: value.page,\n                                    nbPages: value.nbPages\n                                }));\n            });\n        }\n    };\n\n    dropDownHandler = (element) => {\n        this.dropDownElement = element;\n    };\n    \n    showMenuHandler = (menu) => {\n        this.setState({\n            [menu]: true\n        }, () => {\n            document.addEventListener('click', this.closeMenu);\n        });\n    };\n\n    closeMenu = (event) => {\n        if (!this.dropDownElement.contains(event.target)) {\n            this.setState({\n                menu1:false,\n                menu2:false,\n                menu3:false\n            }, () => {\n                document.removeEventListener('click', this.closeMenu);\n            });\n        }\n    };\n\n    showCalenderHandler = (event) => {\n        this.setState({\n            showCalender: true,\n            [event.target.name]: event.target.value\n        }, () => {\n            document.addEventListener('click', this.closeMenu);\n        });\n    };\n\n    closeCalender = (event) => {\n        if (!this.dropDownElement.contains(event.target)) {\n            this.setState({\n                showCalender:false\n            }, () => {\n                document.removeEventListener('click', this.closeCalender);\n            });\n        }\n    };\n\n    customDateRange = () => {        \n        const fromDateTimeStamp = Math.floor(\n            moment(this.state.fromDate).format(\n                    \"X\"));\n\n        const toDateTimeStamp = Math.floor(\n            moment(this.state.toDate).format(\n                \"X\"));\n        \n        this.setState({\n            numericFilter: \"created_at_i>\"\n                + fromDateTimeStamp \n                + \",\" \n                + \"created_at_i<\"\n                + toDateTimeStamp\n        }, () => {\n            fetchData(this.state.query,\n                      this.state.tagFilter,\n                      this.state.sortFilter,\n                      this.state.numericFilter,\n                      this.state.page\n                     ).then(value =>\n                            this.setState({\n                                data: value.hits,\n                                nbHits: value.nbHits,\n                                processingTimeMS: value.processingTimeMS,\n                                page: value.page,\n                                nbPages: value.nbPages\n                            }));\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n              <AppContext.Provider\n                value = {{\n                    value: this.state.query,\n                    showMenuHandler: this.showMenuHandler,\n                    dropDownHandler:this.dropDownHandler,\n                    updateTagFilter:this.updateTagFilter,\n                    updateSortFilter:this.updateSortFilter,\n                    updateNumFilter:this.updateNumFilter,\n                    showCalender:this.state.showCalender,\n                    menu1:this.state.menu1,\n                    menu2:this.state.menu2,\n                    menu3:this.state.menu3,\n                    searchDropDownValue:this.state.searchDropDownValue,\n                    byDropDownValue:this.state.byDropDownValue,\n                    forDropDownValue:this.state.forDropDownValue,\n                    customDateRange:this.customDateRange,\n                    fromDate:this.state.fromDate,\n                    toDate:this.state.toDate,\n                    onChange:this.onChange,\n                    showCalenderHandler:this.showCalenderHandler,\n                    nbHits:this.state.nbHits,\n                    processingTimeMS:this.state.processingTimeMS,\n                    page:this.state.page,\n                    posts_data:this.state.data\n                }}\n              >\n                <Header />\n                <SearchPanel />\n                <PostList />\n                <ReactPaginate\n                  previousLabel={\"<<\"}\n                  nextLabel={\">>\"}\n                  breakLabel={'...'}\n                  breakClassName={'break-me'}\n                  pageCount={this.state.nbPages}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={this.pageCountHandler}\n                  containerClassName={'pagination'}\n                  pageLinkClassName={'page-link'}\n                  activeClassName={'active'}\n                />\n              </AppContext.Provider>\n            </div>\n        );\n    }\n};\n\nexport default App;\nexport {AppContext};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}